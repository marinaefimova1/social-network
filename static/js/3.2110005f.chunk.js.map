{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","id","name","className","s","dialog","src","alt","to","Message","message","owner","messageClass","Dialogs","dialogs","messages","isAuth","dialogElements","map","d","messageElements","m","dialogsItems","onSubmit","addMessage","MessageForm","console","log","initialValues","validationSchema","Yup","max","required","TextArea","type","placeholder","compose","connect","state","dialogsPage","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yB,sBCAnND,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,2B,sBCA/DD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,yBAAyB,MAAQ,uB,wICgBnFC,EAZI,SAACC,GAChB,IAAQC,EAAaD,EAAbC,GAAIC,EAASF,EAATE,KACZ,OACI,sBAAKC,UAAWC,IAAEC,OAAlB,UACI,qBAAKC,IAAI,WAAWC,IAAI,KACxB,cAAC,IAAD,CAASC,GAAE,mBAAcP,GAAzB,SACMC,MAIjB,E,kBCOcO,EAjBC,SAACT,GACb,IAAQU,EAAmBV,EAAnBU,QAASC,EAAUX,EAAVW,MACbC,EAAY,UAAMR,IAAEM,SAKxB,OAHIC,IACAC,EAAY,UAAMR,IAAEM,QAAR,YAAmBN,IAAEO,QAGjC,8BACI,sBAAKR,UAAWS,EAAhB,UACI,qBAAKN,IAAI,WAAWC,IAAI,KACxB,8BAAMG,QAIrB,E,gCCmBcG,EA7BC,SAACb,GACb,IAAQc,EAA8Bd,EAA9Bc,QAASC,EAAqBf,EAArBe,SAAUC,EAAWhB,EAAXgB,OAErBC,EAAiBH,EAAQI,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAYjB,KAAMiB,EAAEjB,KAAiBD,GAAIkB,EAAElB,IAAZkB,EAAElB,GAAxC,IAE7BmB,EAAkBL,EAASG,KAAI,SAACG,GAAD,OAAO,cAAC,EAAD,CAASX,QAASW,EAAEX,QAAoBC,MAAOU,EAAEV,OAAfU,EAAEpB,GAA3C,IAMrC,OAAKe,EAID,sBAAKb,UAAWC,IAAEU,QAAlB,UACI,qBAAKX,UAAWC,IAAEkB,aAAlB,SACKL,IAEL,sBAAKd,UAAWC,IAAEW,SAAlB,UACKK,EAED,cAAC,EAAD,CAAcG,SAfL,SAACb,GAClBV,EAAMwB,WAAWd,EAAQA,QAC5B,UAGU,cAAC,IAAD,CAAUF,GAAI,UAe5B,EAIKiB,EAAc,SAACzB,GAEjB,OADD0B,QAAQC,IAAI3B,GAEP,mCACI,cAAC,IAAD,CACI4B,cAAe,CACXlB,QAAS,IAGbmB,iBACIC,IAAW,CACPpB,QAASoB,MACJC,IAAI,GADA,iCAEJC,SAAS,cAItBT,SAAUvB,EAAMuB,SAbpB,SAeI,eAAC,IAAD,WACI,cAACU,EAAA,EAAD,CACI/B,KAAK,UACLgC,KAAK,OACLC,YAAY,YAEhB,wBAAQD,KAAK,SAAb,+BAKnB,ECjDcE,sBACXC,aAhBoB,SAACC,GACrB,MAAO,CACHxB,QAASwB,EAAMC,YAAYzB,QAC3BC,SAAUuB,EAAMC,YAAYxB,SAEnC,IAE0B,SAACyB,GACxB,MAAO,CACHhB,WAAY,SAACd,GACT8B,EAASC,YAAwB/B,GACpC,EAER,IAIGgC,IAFWN,CAGbvB,E","file":"static/js/3.2110005f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__11r0A\",\"message\":\"Message_message__1MOXo\",\"owner\":\"Message_owner__3j2M1\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport s from './DialogItem.module.css';\n\nconst DialogItem = (props) => {\n    const { id, name } = props;\n    return (\n        <div className={s.dialog}>\n            <img src=\"ava.jpeg\" alt=\"\"/>\n            <NavLink to={`/dialogs/${id}`}>\n                { name }\n            </NavLink >\n        </div>\n    )\n};\n\nexport default DialogItem;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport s from './Message.module.css';\n\nconst Message = (props) => {\n    const { message, owner } = props;\n    let messageClass = `${s.message}`;\n    \n    if (owner) {\n        messageClass = `${s.message} ${s.owner}`;\n    }\n    return (\n        <div>\n            <div className={messageClass}>\n                <img src=\"ava.jpeg\" alt=\"\"/>\n                <div>{message}</div>\n            </div>         \n        </div>\n    )\n};\n\nexport default Message;","import React from 'react';\n\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Navigate } from 'react-router-dom';\nimport { Form, Formik } from 'formik';\nimport TextArea from '../FormItems/TextArea/TextArea';\nimport * as Yup from \"yup\";\n\nconst Dialogs = (props) => {\n    const { dialogs, messages, isAuth } = props;\n\n    const dialogElements = dialogs.map((d) => <DialogItem name={d.name} key={d.id} id={d.id} />);\n\n    const messageElements = messages.map((m) => <Message message={m.message} key={m.id} owner={m.owner} />);\n\n    const onMessageAdd = (message) => {\n        props.addMessage(message.message);\n    };\n\n    if (!isAuth) {\n        return <Navigate to={'/login'} />\n    }\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogElements}\n            </div>\n            <div className={s.messages}>\n                {messageElements}\n\n                <MessageForm  onSubmit={onMessageAdd}/>\n\n            </div>\n        </div>\n    )\n};\n\nexport default Dialogs;\n\nconst MessageForm = (props) => {\n   console.log(props)\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    message: \"\"\n                }}\n                \n                validationSchema={\n                    Yup.object({\n                        message: Yup.string()\n                            .max(10, `Must be 10 characters or less`)\n                            .required(\"Required\")\n                    })\n                }\n\n                onSubmit={props.onSubmit}\n            >\n                <Form>\n                    <TextArea\n                        name=\"message\"\n                        type=\"text\"\n                        placeholder=\"message\"\n                    />\n                    <button type=\"submit\">Add Message</button>\n                </Form>\n            </Formik>\n        </>\n    );\n};","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\n\nimport { addMessageActionCreator } from '../../redux/reducers/dialogsReducer';\nimport Dialogs from './Dialogs';\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (message) => {\n            dispatch(addMessageActionCreator(message));\n        }\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}